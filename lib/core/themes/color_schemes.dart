import 'package:flutter/material.dart';
import 'package:nephro_care/core/themes/theme_model.dart';
import 'package:nephro_care/features/trackers/generic/tracker_enums.dart';

abstract class AppColorScheme {
  static ThemeColorScheme eightball = const ThemeColorScheme(
    light: ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xFF006E1C),
      onPrimary: Color(0xFFFFFFFF),
      primaryContainer: Color(0xFFB6F2AF),
      onPrimaryContainer: Color(0xFF000000),
      primaryFixed: Color(0xFFBFE9CA),
      primaryFixedDim: Color(0xFF8CD49F),
      onPrimaryFixed: Color(0xFF000902),
      onPrimaryFixedVariant: Color(0xFF001B07),
      secondary: Color(0xFF36855E),
      onSecondary: Color(0xFFFFFFFF),
      secondaryContainer: Color(0xFFC0FFD8),
      onSecondaryContainer: Color(0xFF000000),
      secondaryFixed: Color(0xFFD0E8DC),
      secondaryFixedDim: Color(0xFFA8D0BC),
      onSecondaryFixed: Color(0xFF122D20),
      onSecondaryFixedVariant: Color(0xFF173929),
      tertiary: Color(0xFF00658C),
      onTertiary: Color(0xFFFFFFFF),
      tertiaryContainer: Color(0xFFC5E7FF),
      onTertiaryContainer: Color(0xFF000000),
      tertiaryFixed: Color(0xFFBFE2EF),
      tertiaryFixedDim: Color(0xFF8CC7DD),
      onTertiaryFixed: Color(0xFF00161E),
      onTertiaryFixedVariant: Color(0xFF002230),
      error: Color(0xFFBA1A1A),
      onError: Color(0xFFFFFFFF),
      errorContainer: Color(0xFFFFDAD6),
      onErrorContainer: Color(0xFF000000),
      surface: Color(0xFFFCFCFC),
      onSurface: Color(0xFF111111),
      surfaceDim: Color(0xFFE0E0E0),
      surfaceBright: Color(0xFFFDFDFD),
      surfaceContainerLowest: Color(0xFFFFFFFF),
      surfaceContainerLow: Color(0xFFF8F8F8),
      surfaceContainer: Color(0xFFF3F3F3),
      surfaceContainerHigh: Color(0xFFEDEDED),
      surfaceContainerHighest: Color(0xFFE7E7E7),
      onSurfaceVariant: Color(0xFF393939),
      outline: Color(0xFF919191),
      outlineVariant: Color(0xFFD1D1D1),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFF2A2A2A),
      onInverseSurface: Color(0xFFF1F1F1),
      inversePrimary: Color(0xFF8EDFA3),
      surfaceTint: Color(0xFF006E1C),
    ),
    dark: ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xFF7EDB7B),
      onPrimary: Color(0xFF000000),
      primaryContainer: Color(0xFF005313),
      onPrimaryContainer: Color(0xFFFFFFFF),
      primaryFixed: Color(0xFFBFE9CA),
      primaryFixedDim: Color(0xFF8CD49F),
      onPrimaryFixed: Color(0xFF000902),
      onPrimaryFixedVariant: Color(0xFF001B07),
      secondary: Color(0xFFA3F4C5),
      onSecondary: Color(0xFF000000),
      secondaryContainer: Color(0xFF003822),
      onSecondaryContainer: Color(0xFFFFFFFF),
      secondaryFixed: Color(0xFFD0E8DC),
      secondaryFixedDim: Color(0xFFA8D0BC),
      onSecondaryFixed: Color(0xFF122D20),
      onSecondaryFixedVariant: Color(0xFF173929),
      tertiary: Color(0xFF87CFFB),
      onTertiary: Color(0xFF000000),
      tertiaryContainer: Color(0xFF004C6A),
      onTertiaryContainer: Color(0xFFFFFFFF),
      tertiaryFixed: Color(0xFFBFE2EF),
      tertiaryFixedDim: Color(0xFF8CC7DD),
      onTertiaryFixed: Color(0xFF00161E),
      onTertiaryFixedVariant: Color(0xFF002230),
      error: Color(0xFFFFB4AB),
      onError: Color(0xFF000000),
      errorContainer: Color(0xFF93000A),
      onErrorContainer: Color(0xFFFFFFFF),
      surface: Color(0xFF080808),
      onSurface: Color(0xFFF1F1F1),
      surfaceDim: Color(0xFF060606),
      surfaceBright: Color(0xFF2C2C2C),
      surfaceContainerLowest: Color(0xFF010101),
      surfaceContainerLow: Color(0xFF0E0E0E),
      surfaceContainer: Color(0xFF151515),
      surfaceContainerHigh: Color(0xFF1D1D1D),
      surfaceContainerHighest: Color(0xFF282828),
      onSurfaceVariant: Color(0xFFCACACA),
      outline: Color(0xFF777777),
      outlineVariant: Color(0xFF414141),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFFE8E8E8),
      onInverseSurface: Color(0xFF2A2A2A),
      inversePrimary: Color(0xFF3C623B),
      surfaceTint: Color(0xFF7EDB7B),
    ),
  );
}

abstract class AppColors {
  static Color successColor = Colors.green;
}

abstract class TrackerColors {
  static const _colors = {
    TrackerCategory.fluids: {
      Brightness.light: TrackersColorScheme(
        primary: Color(0xFF006A8E),
        onPrimary: Color(0xFFFFFFFF),
        secondary: Color(0xFF3A829B),
        onSecondary: Color(0xFFFFFFFF),
        tertiary: Color(0xFF0083B2),
        background: Color(0xFFF0F8FF),
      ),
      Brightness.dark: TrackersColorScheme(
        primary: Color(0xFF80D4FF),
        onPrimary: Color(0xFF000000),
        secondary: Color(0xFFA3E0FF),
        onSecondary: Color(0xFF000000),
        tertiary: Color(0xFF66C2E6),
        background: Color(0xFF0A1C25),
      ),
    },
    TrackerCategory.urine: {
      Brightness.light: TrackersColorScheme(
        primary: Color(0xFFB8860B),
        onPrimary: Color(0xFF000000),
        secondary: Color(0xFFDAA520),
        onSecondary: Color(0xFF000000),
        tertiary: Color(0xFFFFB300),
        background: Color(0xFFFFF8E1),
      ),
      Brightness.dark: TrackersColorScheme(
        primary: Color(0xFFFFC107),
        onPrimary: Color(0xFF000000),
        secondary: Color(0xFFFFD54F),
        onSecondary: Color(0xFF000000),
        tertiary: Color(0xFFFFCA28),
        background: Color(0xFF1F1A00),
      ),
    },
    TrackerCategory.bloodPressure: {
      Brightness.light: TrackersColorScheme(
        primary: Color(0xFFA1122D),
        onPrimary: Color(0xFFFFFFFF),
        secondary: Color(0xFFC1354A),
        onSecondary: Color(0xFFFFFFFF),
        tertiary: Color(0xFFD9445C),
        background: Color(0xFFFFE4E6),
      ),
      Brightness.dark: TrackersColorScheme(
        primary: Color(0xFFFF6F61),
        onPrimary: Color(0xFF000000),
        secondary: Color(0xFFFF8A80),
        onSecondary: Color(0xFF000000),
        tertiary: Color(0xFFFF9E96),
        background: Color(0xFF2A0F14),
      ),
    },
    TrackerCategory.weight: {
      Brightness.light: TrackersColorScheme(
        primary: Color(0xFF2E7D32),
        onPrimary: Color(0xFFFFFFFF),
        secondary: Color(0xFF4CAF50),
        onSecondary: Color(0xFF000000),
        tertiary: Color(0xFF66BB6A),
        background: Color(0xFFE8F5E9),
      ),
      Brightness.dark: TrackersColorScheme(
        primary: Color(0xFF81C784),
        onPrimary: Color(0xFF000000),
        secondary: Color(0xFFA5D6A7),
        onSecondary: Color(0xFF000000),
        tertiary: Color(0xFFC8E6C9),
        background: Color(0xFF0F1C10),
      ),
    },
    TrackerCategory.dialysis: {
      Brightness.light: TrackersColorScheme(
        primary: Color(0xFF00796B),
        onPrimary: Color(0xFFFFFFFF),
        secondary: Color(0xFF009688),
        onSecondary: Color(0xFF000000),
        tertiary: Color(0xFF26A69A),
        background: Color(0xFFE0F2F1),
      ),
      Brightness.dark: TrackersColorScheme(
        primary: Color(0xFF4DB6AC),
        onPrimary: Color(0xFF000000),
        secondary: Color(0xFF80CBC4),
        onSecondary: Color(0xFF000000),
        tertiary: Color(0xFFB2DFDB),
        background: Color(0xFF0A1F1C),
      ),
    },
    TrackerCategory.medicines: {
      Brightness.light: TrackersColorScheme(
        primary: Color(0xFF6A1B9A),
        onPrimary: Color(0xFFFFFFFF),
        secondary: Color(0xFF8E24AA),
        onSecondary: Color(0xFFFFFFFF),
        tertiary: Color(0xFFAB47BC),
        background: Color(0xFFF3E5F5),
      ),
      Brightness.dark: TrackersColorScheme(
        primary: Color(0xFFBA68C8),
        onPrimary: Color(0xFF000000),
        secondary: Color(0xFFCE93D8),
        onSecondary: Color(0xFF000000),
        tertiary: Color(0xFFE1BEE7),
        background: Color(0xFF1C0F22),
      ),
    },
  };

  static TrackersColorScheme getColors(
    TrackerCategory category,
    BuildContext context,
  ) {
    final isDark = Theme.of(context).brightness == Brightness.dark;
    return _colors[category]![isDark ? Brightness.dark : Brightness.light]!;
  }
}
